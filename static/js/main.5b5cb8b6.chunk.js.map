{"version":3,"sources":["components/Navbar.js","components/About.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toogleMode","htmlFor","About","myStyle","color","backgroundColor","border","borderColor","Fragment","style","aria-labelledby","data-bs-parent","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","countWord","getwords","res","replace","split","map","s","trimStr","trim","length","push","heading","value","onChange","event","target","rows","disabled","newText","toUpperCase","show","toLowerCase","reverse","join","copyText","document","getElementById","navigator","clipboard","writeText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5b5cb8b6.chunk.js","sourcesContent":["//Type rfc to automatically write react funtion components\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toogleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About'\r\n}\r\n","\r\nimport React from 'react'\r\n\r\n\r\n\r\nexport default function About(props) {\r\n   let myStyle={\r\n    color : props.mode === 'light' ? 'black' : 'white',\r\n    backgroundColor : props.mode === 'light' ? 'white' : '#24852aad',\r\n    border : '1px solid',\r\n    borderColor : props.mode === 'light' ? 'black' : 'white'\r\n   }\r\n   \r\n    return (\r\n        <>\r\n        \r\n        <div className=\"container my-2\" style={{borderColor : props.mode === 'light' ? 'black' : 'white', color : props.mode === 'light' ? 'black' : 'white'} }>\r\n        <h1>About Us</h1>\r\n            <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\" style={{borderColor : props.mode === 'light' ? 'black' : 'white', color : props.mode === 'light' ? 'black' : 'white'} }>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle}data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle}data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n           \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        // console.log(\"Click\");\r\n        setText(newText);\r\n        props.show(\"Changed to Uppercase!!\", \"Success\")\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        // console.log(\"Click\");\r\n        setText(newText);\r\n        props.show(\"Changed to Lowercase!!\", \"Success\")\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        // console.log(\"Click\");\r\n        setText(newText);\r\n        props.show(\"Text Cleared!!\", \"Success\")\r\n    }\r\n    const handleReaverseClick = () => {\r\n        let newText = text.split(\"\").reverse().join(\"\");\r\n        // console.log(\"Click\");\r\n        setText(newText);\r\n        props.show(\"Text has been reversed!!\", \"Success\")\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\")\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopyClick = () => { \r\n        let copyText = document.getElementById(\"myTextBox\");       \r\n        // copyText.select();\r\n        navigator.clipboard.writeText(copyText.value);\r\n        props.show(\"Copied to clipboard!!\", \"Success\")\r\n         }\r\n\r\n    // Count the words\r\n    // const [word , setWord] = useState(0);\r\n\r\n    function countWord(getwords){\r\n          let res = [];\r\n          let str = getwords.replace(/[\\t\\n\\r.?!]/gm, \" \").split(\" \");\r\n          str.map((s) => {\r\n            let trimStr = s.trim();\r\n            if (trimStr.length > 0) {\r\n              res.push(trimStr);\r\n            }\r\n            return null;\r\n          });\r\n          return res.length;\r\n        };\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <h2 style={{ color: props.mode === 'light' ? 'black' : 'white' }}>{props.heading}</h2>\r\n                <div className=\"mb-3\" >\r\n                    <textarea className=\"form-control\"  value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'light' ? 'white' : '#196c1e', color: props.mode === 'light' ? 'black' : 'white' }} id=\"myTextBox\" rows=\"10\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-success my-1\" disabled={text.length===0?true:false} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-success my-1 mx-1\" disabled={text.length===0?true:false} onClick={handleLowClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-success my-1 mx-1\" disabled={text.length===0?true:false} onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-success my-1 mx-1\" disabled={text.length===0?true:false} onClick={handleReaverseClick}>Reverse the Text</button>\r\n                <button className=\"btn btn-success my-1 mx-1\" disabled={text.length===0?true:false} onClick={handleCopyClick}>Copy the Text</button>\r\n            </div>\r\n            <div className='container' style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h3>Text Summary</h3>\r\n                <p id=\"show\">{countWord(text)} Words and {text.length}</p>\r\n                <span id=\"min\">{countWord(text) * 0.0008}</span> <span>Minutes read</span>\r\n                <h3>Preview</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\nconst lower = word.toLowerCase();\r\nreturn lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {props.alert && <div>\r\n             <div className=\"\" role=\"alert\" style={{backgroundColor : props.mode==='light' ? '#6fe373' : '#bbede9'}}>\r\n                <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n                \r\n            </div>            \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","\nimport React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n\n  const toogleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#163718\";\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n\n\n  return (\n    <>\n\n      <BrowserRouter>\n\n        <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toogleMode={toogleMode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n\n          <Switch>\n            <Route exact path='/'>\n              <TextForm heading=\"Enter the text below to analyze\" mode={mode} show={showAlert} />\n             \n            </Route>\n            <Route exact path='/about' >\n          \n            <About mode={mode}/>\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}